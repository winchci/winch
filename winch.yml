name: winch
description: Universal build and release tool
repository: https://github.com/winchci/winch

env:
  CGO_ENABLED: "0"
  GO111MODULE: "on"
  GOARCH: amd64
  GOOS: linux

jobs:
  foo:
    steps:
      - use: winchci/foo
  bar:
    steps:
      - use: winchci/foo
    needs:
      - foo
  baz:
    steps:
      - use: winchci/foo
    needs:
      - bar

steps:
- use: winchci/foo
  with:
    directory: templates
    except:
    - /*.go
    filename: templates/templates_gen.go
    package: templates
    variable: Assets

- use: winchci/vfsgen
  with:
    directory: wordlists
    filename: wordlists/wordlists_gen.go
    only:
    - /*.txt
    package: wordlists
    tag: '!dev'
    variable: Assets

- name: Download modules
  run: go mod download

- run: |
    go get -u \
        github.com/kisielk/errcheck \
        golang.org/x/tools/cmd/goimports \
        golang.org/x/lint/golint \
        github.com/securego/gosec/v2 \
        golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow \
        honnef.co/go/tools/cmd/staticcheck

    export GOOS=linux
    mkdir -p bin/$GOOS-$GOARCH

    go build -o bin/$GOOS-$GOARCH/winch ./cmd/winch/main.go
    go build -o bin/$GOOS-$GOARCH/winch-go-errcheck github.com/kisielk/errcheck
    go build -o bin/$GOOS-$GOARCH/winch-go-imports golang.org/x/tools/cmd/goimports
    go build -o bin/$GOOS-$GOARCH/winch-go-lint golang.org/x/lint/golint
    go build -o bin/$GOOS-$GOARCH/winch-go-sec github.com/securego/gosec/v2/cmd/gosec
    go build -o bin/$GOOS-$GOARCH/winch-go-shadow golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow
    go build -o bin/$GOOS-$GOARCH/winch-go-staticcheck honnef.co/go/tools/cmd/staticcheck

    export GOOS=darwin
    mkdir -p bin/$GOOS-$GOARCH

    go build -o bin/$GOOS-$GOARCH/winch ./cmd/winch/main.go
    go build -o bin/$GOOS-$GOARCH/winch-go-errcheck github.com/kisielk/errcheck
    go build -o bin/$GOOS-$GOARCH/winch-go-imports golang.org/x/tools/cmd/goimports
    go build -o bin/$GOOS-$GOARCH/winch-go-lint golang.org/x/lint/golint
    go build -o bin/$GOOS-$GOARCH/winch-go-sec github.com/securego/gosec/v2/cmd/gosec
    go build -o bin/$GOOS-$GOARCH/winch-go-shadow golang.org/x/tools/go/analysis/passes/shadow/cmd/shadow
    go build -o bin/$GOOS-$GOARCH/winch-go-staticcheck honnef.co/go/tools/cmd/staticcheck

- name: Test
  run: go test ./...

- use: winchci/create-github-release
  with:
    artifacts:
    - ./bin/darwin-amd64/
    - ./bin/linux-amd64/
  branches:
    only: master

- use: winchci/generate-homebrew
  with:
    asset: darwin-amd64.tgz
    depends-on:
    - go
    file: formula.rb
    install: |
      bin.install "winch"
      bin.install "winch-go-errcheck"
      bin.install "winch-go-imports"
      bin.install "winch-go-lint"
      bin.install "winch-go-sec"
      bin.install "winch-go-shadow"
      bin.install "winch-go-staticcheck"
    organization: winchci
    repository: homebrew-core
    template: '!brew.tmpl'
    test: |
      system "#{bin}/winch --version"
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: base
    dockerfile: Dockerfile
    organization: winchci
    repository: winch
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: golang
    dockerfile: Dockerfile
    organization: winchci
    repository: golang
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: java-mvn
    dockerfile: Dockerfile
    organization: winchci
    repository: java-mvn
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: node
    dockerfile: Dockerfile
    organization: winchci
    repository: node
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: python
    dockerfile: Dockerfile
    organization: winchci
    repository: python
  branches:
    only: master

- use: winchci/publish-docker
  with:
    buildargs:
      image: scala-sbt
    dockerfile: Dockerfile
    organization: winchci
    repository: scala-sbt
  branches:
    only: master
